# -*- coding: utf-8 -*-
"""Broadstreet_API.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ajgZsqw9Xecb_JrLVsx1SopjOmGK8lpO
"""

import requests
import json
import matplotlib.pyplot as plt
import datetime

stateList = ["WI"]
start = "2020-10-23"
end = "2020-12-25"
fips = ["04000US55","05000US55079"]

#create a set of nested dictionaries, containing keys 'query' and 'variables' 
query = {'query':"""query CovidQuery($input: Covid19SearchInput!)
    {covid19Daily(search: $input){
        edges{
          node{
            fips
            county
            state
            day
            tstpos
            mort
          }
        }
      }
      }""",'variables': {"input": {"startDay": start, "endDay": end,"stateList":stateList, "fipsList":fips}}}

url = "https://demo.broadstreet.io/graphql"

r = requests.get(url, json=query,
    headers={'authorization': 'AIzaSyCbMEN223iJ2r-GhBcPHda0V7mo3vz1uRo'},)
data = r.json()['data']['covid19Daily']['edges']

casesData = {}
for i in data:
    x = i['node']
    if x['county'] in casesData:
      casesData[x['county']]['cases'].append(x['tstpos'])
      casesData[x['county']]['dates'].append(datetime.datetime.strptime(x['day'],"%Y-%m-%d").date())
    else:
      casesData[x['county']] = {'cases':[x['tstpos']], 'dates': [datetime.datetime.strptime(x['day'],"%Y-%m-%d").date()]}

casesData

plt.plot(casesData['Milwaukee County, Wisconsin']['dates'], casesData['Milwaukee County, Wisconsin']['cases'])

plt.plot(casesData['Wisconsin (state)']['dates'], casesData['Wisconsin (state)']['cases'])